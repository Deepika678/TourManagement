{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\workspace\\\\TourManagement\\\\tour\\\\src\\\\components\\\\ListAllIssues.js\";\nimport React, { Component } from 'react';\nimport IssueService from '../services/IssueService';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.css';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport BootstrapTable from 'react-bootstrap-table-next';\n\nclass ListAllIssues extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      issues: []\n    };\n    this.editIssue = this.editIssue.bind(this);\n  }\n\n  editIssue(issue) {\n    this.props.history.push({\n      pathname: `/issues/updateissue/${issue.issueId}`,\n      state: {\n        issue: issue\n      }\n    });\n  }\n\n  viewIssue(issueId) {\n    this.props.history.push(`/issues/${issueId}`);\n  }\n\n  componentDidMount() {\n    IssueService.getIssues().then(res => {\n      this.setState({\n        issues: res.data\n      });\n    });\n  }\n\n  render() {\n    const columns = [{\n      dataField: 'issueId',\n      text: 'Issue Id',\n      sort: true\n    }, {\n      dataField: 'issueDescription',\n      text: 'Issue Description',\n      sort: true\n    }, {\n      dataField: 'issueStatus',\n      text: 'Issue Status',\n      sort: true\n    }, {\n      dataField: 'userId.userId',\n      text: 'Customer Id',\n      sort: true\n    }];\n    const defaultSorted = [{\n      dataField: 'issueId',\n      order: 'asc'\n    }];\n    const pagination = paginationFactory({\n      page: 2,\n      sizePerPage: 5,\n      lastPageText: '>>',\n      firstPageText: '<<',\n      nextPageText: '>',\n      prePageText: '<',\n      showTotal: true,\n      alwaysShowAllBtns: true,\n      onPageChange: function (page, sizePerPage) {\n        console.log('page', page);\n        console.log('sizePerPage', sizePerPage);\n      },\n      onSizePerPageChange: function (page, sizePerPage) {\n        console.log('page', page);\n        console.log('sizePerPage', sizePerPage);\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: \"Issue List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, {\n        bootstrap4: true,\n        keyField: \"issueId\",\n        data: this.state.issues,\n        columns: columns,\n        defaultSorted: defaultSorted,\n        pagination: pagination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.editIssue(this.state.issues),\n        className: \"btn btn-info\",\n        children: \"Update \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginLeft: \"10px\"\n        },\n        onClick: () => this.viewIssue(this.state.issues.issueId),\n        className: \"btn btn-info\",\n        children: \"View \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListAllIssues;","map":{"version":3,"sources":["F:/workspace/TourManagement/tour/src/components/ListAllIssues.js"],"names":["React","Component","IssueService","paginationFactory","BootstrapTable","ListAllIssues","constructor","props","state","issues","editIssue","bind","issue","history","push","pathname","issueId","viewIssue","componentDidMount","getIssues","then","res","setState","data","render","columns","dataField","text","sort","defaultSorted","order","pagination","page","sizePerPage","lastPageText","firstPageText","nextPageText","prePageText","showTotal","alwaysShowAllBtns","onPageChange","console","log","onSizePerPageChange","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport IssueService from '../services/IssueService'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.css';\r\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\n\r\nclass ListAllIssues extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                issues : []\r\n        }\r\n        \r\n        \r\n     this.editIssue = this.editIssue.bind(this);\r\n    \r\n    }\r\n    \r\n    editIssue(issue){\r\n        this.props.history.push({\r\n            pathname:`/issues/updateissue/${issue.issueId}`,\r\n            state:{\r\n                issue:issue\r\n            }\r\n        });\r\n    }\r\n    viewIssue(issueId){\r\n        this.props.history.push(`/issues/${issueId}`);\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        IssueService.getIssues().then((res) => {\r\n            this.setState({ issues : res.data});\r\n        });\r\n    }\r\n   \r\n    \r\n    render() {\r\n    \r\n        \r\n        const columns = [\r\n            { dataField: 'issueId', text: 'Issue Id', sort: true },\r\n            { dataField: 'issueDescription', text: 'Issue Description', sort: true },\r\n            { dataField: 'issueStatus', text: 'Issue Status', sort: true },\r\n            { dataField: 'userId.userId', text: 'Customer Id', sort: true }\r\n          ];\r\n          \r\n        \r\n          const defaultSorted = [{\r\n            dataField: 'issueId',\r\n            order: 'asc'\r\n          }];\r\n    \r\n       const pagination = paginationFactory({\r\n        page: 2,\r\n        sizePerPage: 5,\r\n        lastPageText: '>>',\r\n        firstPageText: '<<',\r\n        nextPageText: '>',\r\n        prePageText: '<',\r\n        showTotal: true,\r\n        alwaysShowAllBtns: true,\r\n        onPageChange: function (page, sizePerPage) {\r\n          console.log('page', page);\r\n          console.log('sizePerPage', sizePerPage);\r\n        },\r\n        onSizePerPageChange: function (page, sizePerPage) {\r\n          console.log('page', page);\r\n          console.log('sizePerPage', sizePerPage);\r\n        }\r\n      });\r\n        return (\r\n            <div>\r\n                 <div ><h2 className=\"text-center\" >Issue List</h2></div>\r\n\r\n                 <BootstrapTable bootstrap4 keyField='issueId' data={this.state.issues} columns={columns} defaultSorted={defaultSorted} pagination={pagination} />\r\n                 <button onClick={ () => this.editIssue(this.state.issues)} className=\"btn btn-info\">Update </button>\r\n                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.viewIssue(this.state.issues.issueId)} className=\"btn btn-info\">View </button> \r\n\r\n                 {/* <div className = \"row\">\r\n                        <table   className = \"table table-striped table-bordered\" pagination={pagination}>\r\n\r\n                            <thead>\r\n                                <tr>\r\n                                    <th > Issue Id</th>\r\n                                    <th > Issue Description</th>\r\n                                    <th > Issue Status</th>\r\n                                   {/*  <th > Customer Id</th>  \r\n                                    <th > Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.issues.map(\r\n                                        issue => \r\n                                        <tr key = {issue.issueId}>\r\n                                             <td align=\"center\"> { issue.issueId} </td>\r\n                                             <td> {issue.issueDescription}</td>   \r\n                                             <td> { issue.issueStatus}</td>\r\n                                             <td align=\"center\"> { issue.userId.userId}</td>   \r\n                                             <td>\r\n                                                 <button onClick={ () => this.editIssue(issue)} className=\"btn btn-info\">Update </button>\r\n                                                 \r\n                                                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.viewIssue(issue.issueId)} className=\"btn btn-info\">View </button> \r\n                                             </td> \r\n                                             \r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table> \r\n                        this.state.issues.map(\r\n            issue => {\r\n                <div>\r\n                <button onClick={ () => this.editIssue(issue)} className=\"btn btn-info\">Update </button>\r\n                <button style={{marginLeft: \"10px\"}} onClick={ () => this.viewIssue(issue.issueId)} className=\"btn btn-info\">View </button> \r\n                </div>\r\n            }\r\n\r\n                            </div>*/}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListAllIssues\r\n"]},"metadata":{},"sourceType":"module"}