{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\workspace\\\\TourManagement\\\\tour\\\\src\\\\components\\\\ListAllIssues.js\";\nimport React, { Component } from 'react';\nimport IssueService from '../services/IssueService';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.css';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\n\nclass ListAllIssues extends Component {\n  constructor(props) {\n    super(props);\n\n    this.update = () => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.editIssue(this.state.issues),\n        className: \"btn btn-info\",\n        children: \"Update \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this);\n    };\n\n    this.view = () => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.viewIssue(this.state.issues),\n        className: \"btn btn-info\",\n        children: \"View \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 18\n      }, this);\n    };\n\n    this.state = {\n      issues: []\n    };\n    this.editIssue = this.editIssue.bind(this);\n    this.viewIssue = this.viewIssue.bind(this);\n  }\n\n  editIssue(issues) {\n    this.state.issues.map(issue => this.props.history.push({\n      pathname: `/issues/updateissue/${issue.issueId}`,\n      state: {\n        issue: issue\n      }\n    }));\n  }\n  /* \r\n   editIssue(issue){\r\n      this.props.history.push({\r\n              pathname:`/issues/updateissue/${issue.issueId}`,\r\n              state:{\r\n                  issue:issue\r\n              }\r\n          })\r\n    }    */\n\n\n  viewIssue(issues) {\n    this.state.issues.map(issue => this.props.history.push({\n      pathname: `/issues/${issue.issueId}`,\n      state: {\n        issue: issue\n      }\n    }));\n  }\n\n  logout() {\n    this.props.history.push('/welcomestaff');\n  }\n\n  componentDidMount() {\n    IssueService.getIssues().then(res => {\n      this.setState({\n        issues: res.data\n      });\n    });\n  }\n\n  render() {\n    const columns = [{\n      dataField: 'issueId',\n      text: 'Issue Id',\n      sort: true,\n      filter: textFilter()\n    }, {\n      dataField: 'issueDescription',\n      text: 'Issue Description',\n      sort: true\n    }, {\n      dataField: 'issueStatus',\n      text: 'Issue Status',\n      sort: true\n    }, {\n      dataField: 'userId.userId',\n      text: 'Customer Id',\n      sort: true\n    }, {\n      formatter: this.update\n    }, {\n      formatter: this.view\n    }];\n    const defaultSorted = [{\n      dataField: 'issueId',\n      order: 'asc'\n    }];\n    const pagination = paginationFactory({\n      page: 1,\n      sizePerPage: 5,\n      lastPageText: '>>',\n      firstPageText: '<<',\n      nextPageText: '>',\n      prePageText: '<',\n      showTotal: true,\n      alwaysShowAllBtns: true,\n      onPageChange: function (page, sizePerPage) {\n        console.log('page', page);\n        console.log('sizePerPage', sizePerPage);\n      },\n      onSizePerPageChange: function (page, sizePerPage) {\n        console.log('page', page);\n        console.log('sizePerPage', sizePerPage);\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: \"Issue List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, {\n        bootstrap4: true,\n        striped: true,\n        bordered: true,\n        hover: true,\n        keyField: \"issueId\",\n        data: this.state.issues,\n        columns: columns,\n        defaultSorted: defaultSorted,\n        pagination: pagination,\n        filter: filterFactory()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        style: {\n          marginLeft: \"500px\"\n        },\n        onClick: this.logout.bind(this),\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListAllIssues;","map":{"version":3,"sources":["F:/workspace/TourManagement/tour/src/components/ListAllIssues.js"],"names":["React","Component","IssueService","paginationFactory","BootstrapTable","filterFactory","textFilter","ListAllIssues","constructor","props","update","editIssue","state","issues","view","viewIssue","bind","map","issue","history","push","pathname","issueId","logout","componentDidMount","getIssues","then","res","setState","data","render","columns","dataField","text","sort","filter","formatter","defaultSorted","order","pagination","page","sizePerPage","lastPageText","firstPageText","nextPageText","prePageText","showTotal","alwaysShowAllBtns","onPageChange","console","log","onSizePerPageChange","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport IssueService from '../services/IssueService'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.css';\r\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';  \r\n\r\nclass ListAllIssues extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                issues : []\r\n                \r\n        }\r\n        \r\n        \r\n     this.editIssue = this.editIssue.bind(this);\r\n     this.viewIssue = this.viewIssue.bind(this);\r\n    \r\n    }\r\n    \r\n   editIssue(issues){\r\n        this.state.issues.map(issue=>\r\n            this.props.history.push({\r\n                pathname:`/issues/updateissue/${issue.issueId}`,\r\n                state:{\r\n                    issue:issue\r\n                }\r\n            })\r\n\r\n        )\r\n        \r\n    } \r\n    /* \r\n     editIssue(issue){\r\n        this.props.history.push({\r\n                pathname:`/issues/updateissue/${issue.issueId}`,\r\n                state:{\r\n                    issue:issue\r\n                }\r\n            })\r\n\r\n    }    */\r\n    \r\n    \r\n    viewIssue(issues){\r\n        this.state.issues.map(issue=>\r\n            this.props.history.push({\r\n                pathname:`/issues/${issue.issueId}`,\r\n                state:{\r\n                    issue:issue\r\n                }\r\n            })\r\n\r\n        )\r\n        \r\n    }\r\n    \r\n    logout(){\r\n        this.props.history.push('/welcomestaff');\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        IssueService.getIssues().then((res) => {\r\n            this.setState({ issues : res.data});\r\n        });\r\n    }\r\n      update=()=>{\r\n        return(\r\n          <button onClick={ () => this.editIssue(this.state.issues)} className=\"btn btn-info\">Update </button> \r\n        )\r\n        } \r\n        \r\n     view=()=>{\r\n         return  <button onClick={ () => this.viewIssue(this.state.issues)} className=\"btn btn-info\">View </button> \r\n\r\n     }\r\n    \r\n   \r\n    \r\n    render() {\r\n       \r\n         const columns = [\r\n            { dataField: 'issueId', text: 'Issue Id', sort: true ,filter: textFilter()  },\r\n            { dataField: 'issueDescription', text: 'Issue Description', sort: true },\r\n            { dataField: 'issueStatus', text: 'Issue Status', sort: true },\r\n            { dataField: 'userId.userId', text: 'Customer Id', sort: true },\r\n            { formatter:this.update},\r\n            { formatter: this.view}\r\n            \r\n          ];\r\n          \r\n          const defaultSorted = [{\r\n            dataField: 'issueId',\r\n            order: 'asc'\r\n          }];\r\n    \r\n       const pagination = paginationFactory({\r\n        page: 1,\r\n        sizePerPage: 5,\r\n        lastPageText: '>>',\r\n        firstPageText: '<<',\r\n        nextPageText: '>',\r\n        prePageText: '<',\r\n        showTotal: true,\r\n        alwaysShowAllBtns: true,\r\n        onPageChange: function (page, sizePerPage) {\r\n          console.log('page', page);\r\n          console.log('sizePerPage', sizePerPage);\r\n        },\r\n        onSizePerPageChange: function (page, sizePerPage) {\r\n          console.log('page', page);\r\n          console.log('sizePerPage', sizePerPage);\r\n        }\r\n      });\r\n    \r\n        \r\n        return (\r\n            <div>\r\n                 <div ><h2 className=\"text-center\" >Issue List</h2></div>\r\n                           \r\n              <BootstrapTable  bootstrap4 striped bordered hover  keyField='issueId' data={this.state.issues} columns={columns} defaultSorted={defaultSorted} pagination={pagination}  filter={ filterFactory()}/>  \r\n                {/* <div className = \"row\">\r\n                        <table   className = \"table table-striped table-bordered\" >\r\n                           <thead>\r\n                                <tr>\r\n                                    <th > Issue Id</th>\r\n                                    <th > Issue Description</th>\r\n                                    <th > Issue Status</th>\r\n                                    <th > Customer Id</th>  \r\n                                    <th > Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.issues.map(\r\n                                        issue => \r\n                                        <tr key = {issue.issueId}>\r\n                                             <td align=\"center\"> { issue.issueId} </td>\r\n                                             <td> {issue.issueDescription}</td>   \r\n                                             <td> { issue.issueStatus}</td>\r\n                                             <td align=\"center\"> { issue.userId.userId}</td>  \r\n                                             <td>\r\n                                                 <button onClick={ () => this.editIssue(issue)} className=\"btn btn-info\">Update </button>\r\n                                                 \r\n                                                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.viewIssue(issue.issueId)} className=\"btn btn-info\">View </button> \r\n                                             </td> \r\n                                             \r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table> </div> */}\r\n                       <button  className=\"btn btn-success\"  style={{marginLeft: \"500px\"}}onClick={this.logout.bind(this)} >Logout</button>\r\n                            \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListAllIssues\r\n"]},"metadata":{},"sourceType":"module"}